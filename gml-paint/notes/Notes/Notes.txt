## The Todo Notes

### Redo - Undo System
	- [ ] Undo
	- [ ] Redo

### Canvas
	- [ ] Zoom in-out
	- [ ] Draw pos when zoom (fix)

### Tools
	- [ ] Brush width
	- [ ] Color
	- [ ] Selection Tool
	- [ ] Hand
	- [ ] Copy/paste Selection
	- [ ] Move/Scale/Rotate selection

### Drawing
	- [ ] Rectangle
	- [ ] Line
	- [ ] Circle
	- [ ] Spread

	- [ ] Selection + Move

### Layout 
	- [ ] Tools 
	- [ ] Colors
	- [ ] Status Bar


## Scan-Fill-Algorithm

```
fn fill(x, y):
	if not Inside(x, y) then return
	let s = new empty queue or stack
	Add (x, x, y, 1) to s
	Add (x, x, y - 1, -1) to s
	while s is not empty: 
		Remove an (x1, x2, y, dy) from s
		let x = x1
		if Inside(x, y):
			while Inside(x - 1, y):
				Set(x - 1, y)
				x = x - 1
			if x < x1:
				Add (x, x1 - 1, y - dy, -dy) to s
		while x1 <= x2:
			while Inside(x1, y):
				Set(x1, y)
				x1 = x1 + 1
			if x1 > x:
				Add (x, x1 - 1, y + dy, dy) to s
			if x1 - 1 > x2:
				Add (x2 + 1, x1 - 1, y - dy, -dy) to s
			x1 = x1 + 1
			while x1 < x2 and not Inside(x1, y):
				x1 = x1 + 1
			x = x1
```